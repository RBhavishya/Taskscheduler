/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutTasksIndexRouteImport } from './routes/_layout/tasks/index'
import { Route as LayoutProjectsIndexRouteImport } from './routes/_layout/projects/index'
import { Route as LayoutNotificationsIndexRouteImport } from './routes/_layout/notifications/index'
import { Route as LayoutDashboardIndexRouteImport } from './routes/_layout/dashboard/index'
import { Route as LayoutProjectsAddIndexRouteImport } from './routes/_layout/projects/add/index'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutTasksIndexRoute = LayoutTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProjectsIndexRoute = LayoutProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutNotificationsIndexRoute =
  LayoutNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutDashboardIndexRoute = LayoutDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProjectsAddIndexRoute = LayoutProjectsAddIndexRouteImport.update({
  id: '/projects/add/',
  path: '/projects/add/',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/notifications': typeof LayoutNotificationsIndexRoute
  '/projects': typeof LayoutProjectsIndexRoute
  '/tasks': typeof LayoutTasksIndexRoute
  '/projects/add': typeof LayoutProjectsAddIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/notifications': typeof LayoutNotificationsIndexRoute
  '/projects': typeof LayoutProjectsIndexRoute
  '/tasks': typeof LayoutTasksIndexRoute
  '/projects/add': typeof LayoutProjectsAddIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/dashboard/': typeof LayoutDashboardIndexRoute
  '/_layout/notifications/': typeof LayoutNotificationsIndexRoute
  '/_layout/projects/': typeof LayoutProjectsIndexRoute
  '/_layout/tasks/': typeof LayoutTasksIndexRoute
  '/_layout/projects/add/': typeof LayoutProjectsAddIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/notifications'
    | '/projects'
    | '/tasks'
    | '/projects/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/notifications'
    | '/projects'
    | '/tasks'
    | '/projects/add'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/dashboard/'
    | '/_layout/notifications/'
    | '/_layout/projects/'
    | '/_layout/tasks/'
    | '/_layout/projects/add/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/tasks/': {
      id: '/_layout/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof LayoutTasksIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/projects/': {
      id: '/_layout/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/notifications/': {
      id: '/_layout/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof LayoutNotificationsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/projects/add/': {
      id: '/_layout/projects/add/'
      path: '/projects/add'
      fullPath: '/projects/add'
      preLoaderRoute: typeof LayoutProjectsAddIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutDashboardIndexRoute: typeof LayoutDashboardIndexRoute
  LayoutNotificationsIndexRoute: typeof LayoutNotificationsIndexRoute
  LayoutProjectsIndexRoute: typeof LayoutProjectsIndexRoute
  LayoutTasksIndexRoute: typeof LayoutTasksIndexRoute
  LayoutProjectsAddIndexRoute: typeof LayoutProjectsAddIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardIndexRoute: LayoutDashboardIndexRoute,
  LayoutNotificationsIndexRoute: LayoutNotificationsIndexRoute,
  LayoutProjectsIndexRoute: LayoutProjectsIndexRoute,
  LayoutTasksIndexRoute: LayoutTasksIndexRoute,
  LayoutProjectsAddIndexRoute: LayoutProjectsAddIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
